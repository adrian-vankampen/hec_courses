?tibble
length_sex_ring <- abalone %>% as_tibble
is.tibble(abalone)
length_sex_ring <- abalone %>%
select(sex, diameter, height, rings) %>%
filter(length > 0.6) %>%
length_sex_ring <- abalone %>%
select(sex, diameter, height, rings) %>%
filter(length > 0.6) %>%
arrange(sex, desc(ring))
length_sex_ring <- abalone %>%
select(sex, diameter, height, rings) %>%
filter(length > 0.6) %>%
length_sex_ring <- abalone %>%
select(sex, diameter, height, rings) %>%
filter(length > 0.6) %>%
length_sex_ring <- abalone %>%
select(sex, diameter, height, rings) %>%
filter(length > 0.6) %>%
arrange()
length_sex_ring <- abalone %>%
select(sex, diameter, height, rings) %>%
filter(length > 0.6) %>%
rm(length_sex_ring)
length_sex_ring <- abalone %>%
select(sex, diameter, height, rings) %>%
filter(length > 0.6)
length_sex_ring <- abalone %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings) %>%
length_sex_ring <- abalone %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings)
length_sex_ring <- abalone %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings) %>%
sort(sex, desc(ring))
length_sex_ring <- abalone %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings) %>%
sort(sex, desc(ring))
length_sex_ring <- abalone %>%
sort(sex, desc(ring)) %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings)
length_sex_ring <- abalone %>%
sort(., sex, desc(ring)) %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings)
length_sex_ring <- sort(abalone, sex, desc(ring)) %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings)
length_sex_ring <- arrange(abalone, sex, desc(ring)) %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings)
length_sex_ring <- abalone %>%
filter(length > 0.6) %>%
arrange(sex) %>%
select(sex, diameter, height, rings)
length_sex_ring <- abalone %>%
filter(length > 0.6) %>%
arrange(sex, desc(rings)) %>%
select(sex, diameter, height, rings)
length_sex_ring <- abalone %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings) %>%
arrange(sex, desc(rings))
print(length_sex_ring, n=5)
?typeof(sex)
typeof(sex)
count_prop <- abalone %>%
group_by(sex) %>%
select(sex, count, prop) %>%
count()
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(sex))
count_prop <- abalone %>%
group_by(sex)
View(count_prop)
count_prop
count_prop <- abalone %>%
group_by(sex) %>%
select(sex)
select(sex)
group_by(sex) %>%
count_prop
count_prop <- abalone %>%
group_by(sex) %>%
select(sex)
count_prop
count_prop <- abalone %>%
group_by(sex) %>%
select(sex) %>%
summarize()
count_prop <- abalone %>%
group_by(sex) %>%
select(sex) %>%
summarize(count = n())
count_prop <- abalone %>%
group_by(sex) %>%
select(sex) %>%
summarize(count = n(sex))
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(sex))
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n())
rm(count_prop)
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n())
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = mean())
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = n()/length())
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = n())
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count / sum())
View(count_prop)
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = n() / sum())
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop =  sum())
count_prop <- abalone %>%
group_by(sex) %>%
summarize(prop = sex / sum(sex))
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n())
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum(count))
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = n()/sum(count))
typeof(count_prop[prop])
typeof(count_prop$prop)
View(count_prop)
summarize(group_by(abalone, sex), count = n(sex))
summarize(group_by(abalone, sex), count = n())
summarize(group_by(abalone, sex), count = n(), prop=n()/sum(count))
summarize(group_by(abalone, sex), count = n(), prop=sum(count))
summarize(group_by(abalone, sex), count = n(), prop=sum())
summarize(group_by(abalone, sex), count = n(), prop=sum(sex))
summarize(group_by(abalone, sex), count = n(), prop=sum(n()))
summarize(group_by(abalone, sex), count = n(), prop= sum())
summarize(abalone, count = n(sex), prop = sum())
summarize(abalone, count = n(), prop = sum())
summarize(abalone, count = n())
count_prop <- abalone %>%
summarize(prop = n()) %>%
group_by(sex) %>%
summarize(count = n(), prop = n()/prop)
count_prop <- abalone %>%
summarize(prop = n())
count_prop
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = n()/prop)
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n())
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum(count))
count_prop <- abalone %>%
group_by(sex) %>%
mutate(count = n())
count_prop <- abalone %>%
group_by(sex) %>%
mutate(count = sum())
count_prop <- abalone %>%
group_by(sex) %>%
mutate(count = n())
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n())
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/4177)
count_prop <- abalone %>%
mutate(sum = length()) %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum)
count_prop <- abalone %>%
mutate(sum = length(abalone)) %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum)
count_prop <- abalone %>%
mutate(sum = length(abalone$sex)) %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum)
count_prop <- abalone %>%
group_by(sex) %>%
mutate(sum = length(abalone$sex)) %>%
summarize(count = n(), prop = count/sum)
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum)
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/4177)
count_prop <- abalone %>%
mutate(prop = n(sex) / sum()) %>%
group_by(sex) %>%
summarize(count = n(), prop)
count_prop <- abalone %>%
mutate(prop = n(sex) / sum(sex)) %>%
group_by(sex) %>%
summarize(count = n(), prop)
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/4177)
mean_max_min <- group_by(abalone, sex) %>%   ## Your code goes here
mean_max_min <- group_by(abalone, sex) %>%
summarize(weigth_mean = mean(weight))
mean_max_min <- group_by(abalone, sex) %>%
summarize(weigth_mean = mean(whole_weight))
mean_max_min <- group_by(abalone, sex) %>%
summarize(weigth_mean = mean(whole_weight), weight_max = max(weight), weight_min = min(weight))
mean_max_min <- group_by(abalone, sex) %>%
summarize(weigth_mean = mean(whole_weight), weight_max = max(whole_weight), weight_min = min(whole_weight))
print(mean_max_min, n = 5)
mean_max_min <- group_by(abalone, sex) %>%
summarize(weigth_mean = mean(shucked_weight), weight_max = max(shucked_weight), weight_min = min(shucked_weight))
mean_max_min <- group_by(abalone, sex) %>%
mean_max_min <- group_by(abalone, sex) %>%
summarize(weigth_mean = mean(shucked_weight), weight_max = max(shucked_weight), weight_min = min(shucked_weight))
mean_max_min <- group_by(abalone, sex) %>%
summarize(weigth_mean = mean(shucked_weight), weight_max = max(shucked_weight), weight_min = min(shucked_weight))
print(mean_max_min, n = 5)
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum(count_prop$count))
rm(count_prop)
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum(count_prop$count))
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/4177)
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum(count))
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum(count_prop))
count_prop <- abalone %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum())
count_prop <- abalone %>%
mutate(sum = n()) %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum)
rm(count_prop)
count_prop <- abalone %>%
mutate(sum = n()) %>%
group_by(sex) %>%
summarize(count = n(), prop = count/sum)
count_prop <- abalone %>%
mutate(sum = n()) %>%                     # Add a column with sum of obs.
group_by(sex) %>%                         # Group by sex
summarize(count = n(), prop = count/sum)  # Summarize the nb. and prop. of obs.
count_prop <- abalone %>%
mutate(sum = n()) %>%                     # Add a column with sum of obs.
group_by(sex) %>%                         # Group by sex
summarize(count = n())  # Summarize the nb. and prop. of obs.
count_prop <- abalone %>%
mutate(sum = n()) %>%                     # Add a column with sum of obs.
group_by(sex) %>%                         # Group by sex
summarize(count = n()) %>%
summarize(prop = count/sum) # Summarize the nb. and prop. of obs.
count_prop <- abalone %>%
group_by(sex) %>%                         # Group by sex
summarize(count = n(), prop = count(4177)) %>%                # Summarize the nb. and prop. of obs.
count_prop <- abalone %>%
group_by(sex) %>%                            # Group by sex
summarize(count = n(), prop = count(4177))   # Summarize the nb. and prop. of obs.
count_prop <- abalone %>%
group_by(sex) %>%                            # Group by sex
summarize(count = n(), prop = count/4177)   # Summarize the nb. and prop. of obs.
count_prop <- abalone %>%
group_by(sex) %>%                            # Group by sex
summarize(count = n(), prop = count/sum(cout_prop$count))    # Summarize the nb. and prop. of obs.
count_prop <- abalone %>%
group_by(sex) %>%                            # Group by sex
summarize(count = n(), prop = count/sum(cout_prop[, "count"]))    # Summarize the nb. and prop. of obs.
count_prop <- abalone %>%
group_by(sex) %>%                            # Group by sex
summarize(count = n(),
prop = n()/sum(cout_prop[, "count"]))    # Summarize the nb. and prop. of obs.
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n(),
prop = n()/sum(cout_prop[, "count"]))    # Summarize the nb. and prop. of obs.
rm(count_prop)
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n(),
prop = n()/sum(cout_prop$count))    # Summarize the nb. and prop. of obs.
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n(),
prop = n()/sum(count_prop$count))    # Summarize the nb. and prop. of obs.
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n(),
prop = n()/sum(count_prop$count))
rm(count_prop)
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n(),
prop = n()/sum(count_prop$count))
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n(),
prop = n()/sum(count_prop[, 2]))    # Summarize the nb. and prop. of obs.
count_prop <- summarize(group_by(abalone, sex), count = n(), prop = n()/sum(count_prop$count))
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n()) %>%
summarize(prop = n()/sum(count))# Summarize the nb. and prop. of obs.
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n()) %>%
mutate(prop = n()/sum(count))# Summarize the nb. and prop. of obs.
rm(count_prop)
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n()) %>%
mutate(prop = n()/sum(count))# Summarize the nb. and prop. of obs.
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n()) %>%
summarize(prop = n()/sum(count))# Summarize the nb. and prop. of obs.
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n()) %>%
summarize(prop = n()/sum(count))# Summarize the nb. and prop. of obs.
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n(),
prop = n()/sum(count_prop))    # Summarize the nb. and prop. of obs.
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n(),
prop = n()/sum(count_prop))    # Summarize the nb. and prop. of obs.
count_prop <- group_by(abalone, sex) %>%                            # Group by sex
summarize(count = n(), prop = n()/4177)    # Summarize the nb. and prop. of obs.
mean_max_min <- group_by(abalone, sex) %>%
summarize(weight_mean = mean(shucked_weight),
weight_max = max(shucked_weight),
weight_min = min(shucked_weight))
summarize(group_by(abalone, sex), count = n(), prop = prop())
?prop
?summarize
summarize(group_by(abalone, sex), count = n(), sum = sum())
count_prop <- group_by(abalone, sex) %>%        # Group by sex
summarize(count = n(), prop = n()/4177) %>%  # Summarize the nb. of obs.
mutate(prop = count/sum(count))
rm(count_prop)
count_prop <- group_by(abalone, sex) %>%        # Group by sex
summarize(count = n(), prop = n()/4177) %>%  # Summarize the nb. of obs.
mutate(prop = count/sum(count))
count_prop <- group_by(abalone, sex) %>%        # Group by sex
summarize(count = n()) %>%  # Summarize the nb. of obs.
mutate(prop = count/sum(count))
rm(count_prop)
count_prop <- group_by(abalone, sex) %>%        # Group by sex
summarize(count = n()) %>%  # Summarize the nb. of obs.
mutate(prop = count/sum(count))
count_prop <- group_by(abalone, sex) %>%  # Group by sex
summarize(count = n()) %>%             # Summarize the nb. of obs.
mutate(prop = count/sum(count))        # Finds the proportion of each obs. group
count_prop <- group_by(abalone, sex) %>%  # Group by sex
summarize(count = n()) %>%             # Summarize the nb. of obs.
summarize(prop = count/sum(count))        # Finds the proportion of each obs. group
rm(count_prop)
count_prop <- group_by(abalone, sex) %>%  # Group by sex
summarize(count = n()) %>%             # Summarize the nb. of obs.
summarize(prop = count/sum(count))        # Finds the proportion of each obs. group
count_prop <- group_by(abalone, sex) %>%  # Group by sex
summarize(count = n()) %>%             # Summarize the nb. of obs.
mutate(prop = count/sum(count))        # Finds the proportion of each obs. group
print(count_prop, n = 5)
filter_na <- filter(abalone, (diameter == NA | diameter >0.36))
filter_na <- filter(abalone, (is.na(diameter) | diameter >0.36))
?rename
filter_na <- filter(abalone, (is.na(diameter) | diameter > 0.36)) %>%
rename(index = X)
filter_na <- filter(abalone, (is.na(diameter) | diameter > 0.36)) %>%
rename(index = X) %>%
select(index, sex, length, diameter, rings, everything())
print(filter_na, n = 5)
transmute_abalone <- transmute(abalone,
whole_weight_in_mg = whole_weight * 1000,
water_weight_in_mg = water_weight * 1000)
View(abalone)
transmute_abalone <- transmute(abalone,
whole_weight_in_mg = whole_weight * 1000)
print(transmute_abalone, n = 5)
transmute_abalone <- transmute(abalone,
whole_weight_in_mg = whole_weight * 1000
water_weight = 1000*(
transmute_abalone <- transmute(abalone,
whole_weight_in_mg = whole_weight * 1000
water_weight = 1000*(whole_weight-shucked_weight-viscera_weight-shell_weight))
transmute_abalone <- transmute(abalone,
whole_weight_in_mg = whole_weight * 1000,
water_weight = 1000*(whole_weight-shucked_weight-viscera_weight-shell_weight))
print(transmute_abalone, n = 5)
transmute_abalone <- transmute(abalone,
whole_weight_in_mg = whole_weight * 1000,
water_weight = 1000*(
whole_weight-
shucked_weight-
viscera_weight-
shell_weight))
transmute_abalone <- transmute(abalone,
transmute_abalone <- transmute(abalone,
whole_weight_in_mg = whole_weight * 1000,
water_weight = 1000*(
whole_weight-
shucked_weight-
viscera_weight-
shell_weight))
print(transmute_abalone, n = 5)
transmute_abalone <- transmute(abalone,
whole_weight_in_mg = whole_weight * 1000,
water_weight = 1000*(
whole_weight-sum(shucked_weight:shell_weight)))
transmute_abalone <- transmute(abalone,
whole_weight_in_mg = whole_weight * 1000,
water_weight = 1000*(
whole_weight-
shucked_weight-
viscera_weight-
shell_weight))
attach(abalone)
abalone <- read_csv(file = here::here("data/abalone.csv"))$
attach(abalone)
abalone <- read_csv(file = here::here("data/abalone.csv"))$
attach(abalone)
length_sex_ring <- abalone %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings) %>%
arrange(sex, desc(rings))
```{r echo = TRUE}
length_sex_ring <- abalone %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings) %>%
arrange(sex, desc(rings))
detach(abalone)
rm(ls=list())
rm(list = ls())
source(here::here("scripts/setup.R"))
source(here::here("scripts/setup.R"))
Let's first load a dataset:
```{r, echo = FALSE}
abalone <- read_csv(file = here::here("data/abalone.csv"))$
attach(abalone)
length_sex_ring <- abalone %>%
filter(length > 0.6) %>%
select(sex, diameter, height, rings) %>%
arrange(sex, desc(rings))
count_prop <- group_by(abalone, sex) %>%  # Group by sex
summarize(count = n()) %>%             # Summarize the nb. of obs.
mutate(prop = count/sum(count))        # Finds the proportion of each obs. group
mean_max_min <- group_by(abalone, sex) %>%
summarize(weight_mean = mean(shucked_weight),
weight_max = max(shucked_weight),
weight_min = min(shucked_weight))
filter_na <- filter(abalone, (is.na(diameter) | diameter > 0.36)) %>%
rename(index = X) %>%
select(index, sex, length, diameter, rings, everything())
transmute_abalone <- transmute(abalone,
whole_weight_in_mg = whole_weight * 1000,
water_weight = 1000*(
whole_weight-
shucked_weight-
viscera_weight-
shell_weight))
source(here::here("scripts/setup.R"))
abalone <- read_csv(file = here::here("data/abalone.csv"))
abalone <- read_csv(file = here::here("data/abalone.csv"))
first_1000_rank <- arrange(abalone, rings)
first_1000_rank <- arrange(abalone, rings) %>%
mutate(rings_rank = c(1:length(rings)))
first_1000_rank <- arrange(abalone, rings) %>%
mutate(rings_rank = c(1:length(rings))) %>%
select(diameter, rings, rings_rank)
first_1000_rank <- arrange(abalone, rings) %>%
mutate(rings_rank = c(1:length(rings))) %>%
select(diameter, rings, rings_rank) %>%
filter(rings_rank <= 1000)
print(first_1000_rank, n = 5)
n_distinct_rings_by_sex <- group_by(abalone, sex) %>%
summarize(distinct_rings = n_distinct(rings))
print(n_distinct_rings_by_sex, n = 5)
?ggplot
?ggplot2
?ggplot
ggplot(abalone, mapping = aes(rings))
ggplot(abalone, mapping = aes(rings, n(rings)))
ggplot(abalone, mapping = aes(rings, count(rings))
ggplot(abalone, mapping = aes(rings, count(rings)))
ggplot(abalone, mapping = aes(rings)) + geom_density()
ggplot(abalone, mapping = aes(rings)) + geom_histogram()
plot <- group_by(abalone, sex)%>%
ggplot(mapping = aes(rings)) + geom_histogram()
group_by(abalone, sex)%>%
ggplot(mapping = aes(rings)) + geom_histogram()
group_by(abalone, sex)%>%
ggplot(aes(x=rings, fill=group)) + geom_histogram()
group_by(abalone, sex)%>%
ggplot(aes(x=rings, fill=sex)) + geom_histogram()
